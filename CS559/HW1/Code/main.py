from Dataset import get_full_dataset
from KFoldCrossValidation import KFoldCrossValidation
from RidgeRegression import averageloss

def main():
    data = get_full_dataset()
    best_model, err = KFoldCrossValidation(10, data)
    print(f"Best model chosen: {best_model}, with average squared validation error {err}")
    print(f"Calculating overall error...")
    print(f"Overall average squared error: {averageloss(data, best_model)}")

if __name__ == "__main__":
    main()

# Program output

# Loading dataset...
# Starting training with set 1 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.118089742653613e-07, -7.857850347773252e-06, 9.732573877786037e-05, 0.0024398682135211985, 0.0027041295229190882, 0.00048497585051618635, 0.0024446533075251145, -0.00191145660987932, 0.0012880713229148169, 0.0006704630989085618, 0.0, 0.0024567651272636637, 0.0015287953638350494, 0.001373448601150243, 0.0014201611095058107, 0.0018151230427909753, 0.0016642566352420662, 0.0017806340292563327, 0.0011102136561854717, 0.0016052083938845787, 0.0014985439358937733, 0.0015273970271282233, 0.001712410952268881, 0.0015981449920179297, 0.0015244028598123838, 0.001300218356987349]. Calculating error.
# Average squared error for this model on validation set: 1279.4488394668072
# Starting training with set 2 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.153160905497271e-07, 1.589814358049937e-06, 8.901920011517973e-05, 0.0025487015182069778, 0.002764979886754262, 0.001059442313870874, 0.0025556144467617746, -0.0016573298659807395, 0.001401755672793316, 0.000672649528939602, 0.0, 0.0030807286627814955, 0.0018453007732650276, 0.0018298057044667305, 0.001766132225364083, 0.0021332561121040886, 0.0018646054335064394, 0.002057639014083669, 0.0015811582718787385, 0.0018649251861808653, 0.001730089183230433, 0.0019434139381433126, 0.0021541323468147458, 0.0017726064080652562, 0.0019018146874673187, 0.0021286064050969637]. Calculating error.
# Average squared error for this model on validation set: 1189.7929770187316
# Starting training with set 3 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.418772445800195e-07, 1.120270938404104e-05, 8.50773391206908e-05, 0.002636102350882933, 0.002853677208663182, 0.0010669453338204593, 0.002641899995504081, -0.0015251837595692869, 0.0014800559746578634, 0.000632508377067887, 0.0, 0.003180707764237006, 0.0018210098846571923, 0.0019229786043708137, 0.001875072717478294, 0.0021670316207649627, 0.0019527355221101979, 0.0021646713935235223, 0.001623657089302549, 0.0019643340164071437, 0.0018160876462229424, 0.0019625638125307216, 0.002222479791636139, 0.0018863317046158173, 0.0019707196155649047, 0.0020308130544908908]. Calculating error.
# Average squared error for this model on validation set: 1160.7917838859635
# Starting training with set 4 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.926199728121934e-07, 2.1217916046355595e-06, 9.041801169804009e-05, 0.0026282076443806504, 0.002835231219073809, 0.0010836489799077352, 0.0026319172052096046, -0.0016653058754143124, 0.0014190888075222088, 0.000678167623403294, 0.0, 0.003091996852706879, 0.0018463157847725883, 0.0018476776854695202, 0.0017927645707506718, 0.002148880610225202, 0.0018823070800995107, 0.0021070734999105428, 0.001545140028642987, 0.0019368021663177678, 0.0017590469196159166, 0.0019146413155101988, 0.002147534904131872, 0.0018248152218686027, 0.001924490992783956, 0.0019644585642842583]. Calculating error.
# Average squared error for this model on validation set: 935.526513574707
# Starting training with set 5 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.202274796763004e-07, 1.1228170805013288e-05, 8.431691003715248e-05, 0.0025705708107361174, 0.0027814717423495713, 0.0010932059795550218, 0.002575596712149515, -0.0015276006527954705, 0.0014786068969615534, 0.0006376976239347941, 0.0, 0.0031415389605373868, 0.0018300258594268948, 0.0018671430192912656, 0.0018785577044203024, 0.002181297779265655, 0.0019333430380048717, 0.002150201744037984, 0.001601532535757516, 0.0019388054060646852, 0.0017674043666449516, 0.0019392954192307959, 0.0021970809650225563, 0.0018773150259896185, 0.0019745382103089674, 0.001994308814408152]. Calculating error.
# Average squared error for this model on validation set: 1317.3702431161964
# Starting training with set 6 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.224998154847037e-07, 8.441516508193227e-06, 8.6040306728601e-05, 0.0026527422431740304, 0.0028627885752721535, 0.0011161770737936664, 0.002657392292522197, -0.0016041422862266197, 0.0014764443142007112, 0.0006400055649557416, 0.0, 0.003153876117137535, 0.0018674189417917273, 0.0018896104818329766, 0.0018436728153386722, 0.0021820890025169974, 0.00195971964903113, 0.002130190004772813, 0.0016300485417735041, 0.0019706811508099615, 0.0018143472325131635, 0.0019430334816441085, 0.0021858842617411764, 0.0019138785103903961, 0.0019344853269517583, 0.00201398026577272]. Calculating error.
# Average squared error for this model on validation set: 1099.216256697638
# Starting training with set 7 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-8.555995782214186e-07, 9.879839209105214e-06, 8.961801660707911e-05, 0.002606008874130721, 0.002814102900615557, 0.0010789022179454012, 0.0026107464107699738, -0.0015120057225271038, 0.001468106147082694, 0.0006673666975466878, 0.0, 0.0031315793047332024, 0.0018708395533737754, 0.001862627470019456, 0.001835789074924658, 0.002141749722003734, 0.001915137552706559, 0.0021566961537852042, 0.0015771228410704687, 0.0019440774984779802, 0.0017571168571423078, 0.0019510769230294284, 0.0021738099400387466, 0.0018543044594486766, 0.001955543176819545, 0.0019995390070596595]. Calculating error.
# Average squared error for this model on validation set: 1255.6707457952484
# Starting training with set 8 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-7.823024943686891e-07, 6.035234932408719e-06, 8.567203385610623e-05, 0.0026094891991582264, 0.0028243591979741764, 0.0011015263300932592, 0.0026151115256264398, -0.0015654536240686863, 0.0014909019574624656, 0.000646578823352791, 0.0, 0.0031461864685537514, 0.0018602427519937245, 0.0018950543819019512, 0.0018835725376565656, 0.0021411494781937465, 0.0019464129143991564, 0.0021574886187211285, 0.0016119436073516343, 0.0019699637838314346, 0.0017962138349218058, 0.0019472350216720568, 0.0021650593897123826, 0.001896914848266021, 0.0019480673619803434, 0.0020295986413809797]. Calculating error.
# Average squared error for this model on validation set: 1058.3245481340298
# Starting training with set 9 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-5.023680003525378e-07, 9.855884090418586e-06, 8.571051771135403e-05, 0.002647085735614071, 0.002869234392877699, 0.001093243586346731, 0.0026535908303600276, -0.0015808004144509027, 0.001482657570739368, 0.0006459583118336114, 0.0, 0.003200019378349856, 0.001897428827983901, 0.0019149329780547457, 0.0018857740390214293, 0.0022209229736340646, 0.001974602572846074, 0.0021531129617000035, 0.0016496016285492867, 0.0019810229820307833, 0.0018127405166896184, 0.001964315610863559, 0.0022291682040298873, 0.001930534701567076, 0.001981642121608407, 0.002017602759888204]. Calculating error.
# Average squared error for this model on validation set: 898.9634828218287
# Starting training with set 10 of 10 as validation set.
# Starting gradient descent.
# Iteration 0/50
# Iteration 10/50
# Iteration 20/50
# Iteration 30/50
# Iteration 40/50
# Training complete. Model: [-7.874090074667231e-07, 3.902519833007477e-06, 9.087659184313926e-05, 0.002653960621128745, 0.0028569903373370734, 0.0011097853693020087, 0.0026583077278822076, -0.0015252272601351613, 0.0014783206386585071, 0.0006619746110490483, 0.0, 0.0031382274682931416, 0.0018730904995614872, 0.0018692669043508848, 0.0018203287993867976, 0.002143408683767865, 0.001936362141024877, 0.0021469694385226976, 0.001584132288413784, 0.001952048855552288, 0.0017734934393493188, 0.0019330140245364055, 0.0021734929932607744, 0.0018488720358407259, 0.0019520936581272858, 0.0020243923316319336]. Calculating error.
# Average squared error for this model on validation set: 1155.5376398132123
# KFold complete. Selecting best model...
# Best model chosen: [-5.023680003525378e-07, 9.855884090418586e-06, 8.571051771135403e-05, 0.002647085735614071, 0.002869234392877699, 0.001093243586346731, 0.0026535908303600276, -0.0015808004144509027, 0.001482657570739368, 0.0006459583118336114, 0.0, 0.003200019378349856, 0.001897428827983901, 0.0019149329780547457, 0.0018857740390214293, 0.0022209229736340646, 0.001974602572846074, 0.0021531129617000035, 0.0016496016285492867, 0.0019810229820307833, 0.0018127405166896184, 0.001964315610863559, 0.0022291682040298873, 0.001930534701567076, 0.001981642121608407, 0.002017602759888204], with average squared validation error 898.9634828218287
# Calculating overall error...
# Overall average squared error: 1129.1258803889468